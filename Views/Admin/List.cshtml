
@model PagedList.IPagedList<CarribeaneTaxi.Entity.AdminUser>
@using PagedList.Mvc;

@{
    ViewBag.Title = "List";
    Layout = "~/Views/Shared/Layout.cshtml";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.4.0/css/font-awesome.min.css" rel='stylesheet' type='text/css'>
<link href="~/CSS/Table.css" rel="stylesheet" />

<div class="container">
    <div class="row">
        <div class="panel panel-default panel-table">
            <div class="panel-heading">
                <div class="row">
                    <div class="col col-xs-6">
                        <h3 class="panel-title">Admin User</h3>
                    </div>
                    <div class="col col-xs-6 text-right">
                        <button type="button" onclick="location.href='@Url.Action("Create","Admin")'" class="btn btn-sm btn-primary btn-create">Create New</button>
                    </div>
                </div>
            </div>
            <div class="panel-body">
                <table class="table table-striped table-bordered table-list">
                    <thead>
                        <tr>
                            <th>
                                @Html.ActionLink("Firstname", "List", new { sortOrder = ViewBag.sortparmFirstName })
                            </th>
                            <th>
                                @Html.ActionLink("Lastname", "List", new { sortOrder = ViewBag.sortparmLastName })
                            </th>
                            <th>
                                @Html.ActionLink("Gender", "List", new { sortOrder = ViewBag.sortparmGender })
                            </th>
                            <th>
                                @Html.ActionLink("Username", "List", new { sortOrder = ViewBag.sortparmUserName })
                            </th>
                            <th>
                                @Html.ActionLink("Email", "List", new { sortOrder = ViewBag.sortparmEmail })
                            </th>
                            <th>
                                @Html.ActionLink("Usertype", "List", new { sortOrder = ViewBag.sortparmUserType })
                            </th>

                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.FirstName</td>
                                <td>@item.LastName</td>
                                <td>@item.Gender</td>
                                <td>@item.UserName</td>
                                <td>@item.Email</td>
                                <td>@item.UserType</td>

                                <td>
                                    <a data-placement="top" data-toggle="tooltip" title="Edit"><button onclick="location.href='@Url.Action("Edit","Admin",new { id=item.Id})'" class="btn btn-primary btn-xs" data-title="Edit" data-toggle="modal" data-target="#edit"><span class="glyphicon glyphicon-pencil"></span></button></a>
                                    <a data-placement="top" data-toggle="tooltip" title="Delete"><button onclick="location.href='@Url.Action("Delete","Admin",new { id=item.Id})'" class="btn btn-danger btn-xs" data-title="Delete" data-toggle="modal" data-target="#delete"><span class="glyphicon glyphicon-trash"></span></button></a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
            <div class="panel-footer">
                <div class="row">
                    <div class="col col-xs-4">
                        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                    </div>
                    <div class="col col-xs-8">
                        @Html.PagedListPager(Model, page => Url.Action("List",
    new { page, sortOrder = ViewBag.CurrentSort, filterLastName = ViewBag.filterLastName, filterMidName = ViewBag.filterMidName, filterDate = ViewBag.filterDate }))
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>

    $(document).ready(function () {
        $(".pagination-container").addClass("pull-right");
    });

</script>
